{"version":3,"sources":["Components/LoadingScreen/loader.gif","Redux/expenses-selectors.js","Components/ExpensesSummary/expenses-summary.component.jsx","Redux/expenses-total-selector.js","Components/ExpenseListFilters/expense-list-filters.component.jsx","Redux/filters.actions.js","Components/ExpensesListItem/expenses-list-item.component.jsx","Components/ExpenseList/expense-list.component.jsx","Components/ExpenseDashboard/expense-dashboard-page.component.jsx","Firebase/firebase.js","Redux/expenses-actions.js","Components/ExpenseForm/expense-form.component.jsx","Components/AddExpense/add-expense-component.jsx","Components/EditExpense/edit-expense.component.jsx","Components/404Error/404-error.component.jsx","Components/Login/login-page.component.jsx","Redux/auth-actions.js","Components/Header/header.component.jsx","Components/PrivateRoute/private-route.component.jsx","Components/PublicRoute/public-route.component.jsx","app-routers/app-routers.jsx","App.js","serviceWorker.js","Components/LoadingScreen/loading-screen.component.jsx","Redux/expenses-reducer.js","Redux/filters-reducer.js","Redux/auth-reducer.js","Redux/store.js","index.js"],"names":["module","exports","expenses","text","sortBy","startDate","endDate","filter","expense","createdAtMoment","moment","createdAt","startDateMatch","isSameOrBefore","endDateMatch","isSameOrAfter","textMatch","description","toLowerCase","includes","sort","a","b","amount","connect","state","visibleExpenses","selectExpenses","filters","expenseCount","length","expensesTotal","map","reduce","sum","value","expenseWord","formattedExpensesTotal","numeral","format","className","to","ExpenseListFilters","calendarFocused","onTextChange","e","props","setTextFilter","target","onDatesChange","setStartDate","setEndDate","onSortChange","sortByDate","sortByAmount","onFocusChange","setState","placeholder","type","this","onChange","startDateId","endDateId","focusedInput","numberOfMonths","isOutsideRange","showClearDates","React","Component","dispatch","ExpenseListItem","id","getVisibleExpenses","key","ExpenseDashboard","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","googleAuthProvider","auth","GoogleAuthProvider","addExpense","removeExpense","date","console","log","ExpenseForm","onDescriptionChange","onNoteChange","note","onAmountChange","match","onDateChange","focused","onSubmit","preventDefault","error","parseFloat","valueOf","toString","autoFocus","onClick","AddExpense","startAddExpense","history","push","expenseData","getState","uid","ref","then","EditExpensePage","startEditExpenses","onRemove","startRemoveExpenses","find","params","updates","update","editExpense","data","remove","NotFoundError","undefined","startLogin","signInWithPopup","startLogout","signOut","isAuthenticated","component","rest","createHistory","AppRouter","exact","path","LoginPage","EditExpense","App","Boolean","window","location","hostname","LoadingScreen","src","require","expensesReducerDefaultState","action","filtersReducerDefaultState","startOf","endOf","filtersReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","expensesReducer","authReducer","applyMiddleware","thunk","configStore","ReactDOM","render","StrictMode","document","getElementById","hasRendered","renderApp","onAuthStateChanged","user","once","snapshot","forEach","childSnapshot","val","setExpenses","pathname","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b084e4f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.66752d97.gif\";","// Get visible expenses\r\nimport moment from \"moment\";\r\n\r\nexport default (expenses, { text, sortBy, startDate, endDate }) => {\r\n  return expenses\r\n    .filter((expense) => {\r\n      const createdAtMoment = moment(expense.createdAt);\r\n      const startDateMatch = startDate\r\n        ? startDate.isSameOrBefore(createdAtMoment, \"day\")\r\n        : true;\r\n      const endDateMatch = endDate\r\n        ? endDate.isSameOrAfter(createdAtMoment, \"day\")\r\n        : true;\r\n      const textMatch = expense.description\r\n        .toLowerCase()\r\n        .includes(text.toLowerCase());\r\n\r\n      return startDateMatch && endDateMatch && textMatch;\r\n    })\r\n    .sort((a, b) => {\r\n      if (sortBy === \"date\") {\r\n        return a.createdAt < b.createdAt ? 1 : -1;\r\n      } else if (sortBy === \"amount\") {\r\n        return a.amount < b.amount ? 1 : -1;\r\n      }\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport numeral from \"numeral\";\r\n\r\nimport selectExpenses from \"../../Redux/expenses-selectors.js\";\r\nimport selectExpensesTotal from \"../../Redux/expenses-total-selector.js\";\r\nimport \"./expenses-summary.styles.scss\";\r\n\r\nexport const ExpensesSummary = ({ expenseCount, expensesTotal }) => {\r\n  const expenseWord = expenseCount === 1 ? \"expense\" : \"expenses\";\r\n  const formattedExpensesTotal = numeral(expensesTotal / 100).format(\"$0,0.00\");\r\n\r\n  return (\r\n    <div className=\"page-header\">\r\n      <div className=\"content-container\">\r\n        <h1 className=\"page-header__title\">\r\n          Viewing <span>{expenseCount}</span> {expenseWord} totalling{\" \"}\r\n          <span>{formattedExpensesTotal}</span>\r\n        </h1>\r\n        <Link className=\"page-header__actions\" to=\"/create\">\r\n          Add Expense\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  const visibleExpenses = selectExpenses(state.expenses, state.filters);\r\n\r\n  return {\r\n    expenseCount: visibleExpenses.length,\r\n    expensesTotal: selectExpensesTotal(visibleExpenses),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExpensesSummary);\r\n","export default (expenses) => {\r\n  return expenses\r\n    .map((expense) => expense.amount)\r\n    .reduce((sum, value) => sum + value, 0);\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { DateRangePicker } from \"react-dates\";\r\nimport \"react-dates/initialize\";\r\n\r\nimport {\r\n  setTextFilter,\r\n  sortByDate,\r\n  sortByAmount,\r\n  setStartDate,\r\n  setEndDate,\r\n} from \"../../Redux/filters.actions\";\r\nimport \"./expense-list-filters.styles.scss\";\r\n\r\nexport class ExpenseListFilters extends React.Component {\r\n  state = {\r\n    calendarFocused: null,\r\n  };\r\n\r\n  onTextChange = (e) => {\r\n    this.props.setTextFilter(e.target.value);\r\n  };\r\n\r\n  onDatesChange = ({ startDate, endDate }) => {\r\n    this.props.setStartDate(startDate);\r\n    this.props.setEndDate(endDate);\r\n  };\r\n\r\n  onSortChange = (e) => {\r\n    if (e.target.value === \"date\") {\r\n      this.props.sortByDate();\r\n    } else if (e.target.value === \"amount\") {\r\n      this.props.sortByAmount();\r\n    }\r\n  };\r\n  onFocusChange = (calendarFocused) => this.setState({ calendarFocused });\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"content-container\">\r\n        <div className=\"input-group\">\r\n          <div className=\"input-group__item\">\r\n            <input\r\n              placeholder=\"Search Expenses\"\r\n              className=\"text-input\"\r\n              type=\"text\"\r\n              value={this.props.filters.text}\r\n              onChange={this.onTextChange}\r\n            />\r\n          </div>\r\n          <div className=\"input-group__item\">\r\n            <select\r\n              className=\"select\"\r\n              value={this.props.filters.sortBy}\r\n              onChange={this.onSortChange}\r\n            >\r\n              <option value=\"date\">Date</option>\r\n              <option value=\"amount\">Amount</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"input-group__item\">\r\n            <DateRangePicker\r\n              className=\"dateRangePicker\"\r\n              startDate={this.props.filters.startDate}\r\n              startDateId=\"startdateid\"\r\n              endDate={this.props.filters.endDate}\r\n              endDateId=\"enddateid\"\r\n              onDatesChange={this.onDatesChange}\r\n              focusedInput={this.state.calendarFocused}\r\n              onFocusChange={this.onFocusChange}\r\n              numberOfMonths={1}\r\n              isOutsideRange={() => false}\r\n              showClearDates={true}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  filters: state.filters,\r\n  expenses: state.expenses,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setTextFilter: (text) => dispatch(setTextFilter(text)),\r\n  sortByDate: () => dispatch(sortByDate()),\r\n  sortByAmount: () => dispatch(sortByAmount()),\r\n  setStartDate: (startDate) => dispatch(setStartDate(startDate)),\r\n  setEndDate: (endDate) => dispatch(setEndDate(endDate)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseListFilters);\r\n","// SET_TEXT_FILTER\r\nexport const setTextFilter = (text = \"\") => ({\r\n  type: \"SET_TEXT_FILTER\",\r\n  text,\r\n});\r\n\r\n// SORT_BY_DATE\r\nexport const sortByDate = () => ({\r\n  type: \"SORT_BY_DATE\",\r\n});\r\n\r\n// SORT_BY_AMOUNT\r\nexport const sortByAmount = () => ({\r\n  type: \"SORT_BY_AMOUNT\",\r\n});\r\n\r\n// SET_START_DATE\r\nexport const setStartDate = (startDate) => ({\r\n  type: \"SET_START_DATE\",\r\n  startDate,\r\n});\r\n\r\n// SET_END_DATE\r\nexport const setEndDate = (endDate) => ({\r\n  type: \"SET_END_DATE\",\r\n  endDate,\r\n});\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\n\r\nimport \"./expense-list-item.styles.scss\";\r\n\r\nconst ExpenseListItem = ({ description, amount, createdAt, id, dispatch }) => (\r\n  <Link className=\"list-item\" to={`/edit/${id}`}>\r\n    <div>\r\n      <h3 className=\"list-item__title\">{description}</h3>\r\n      <span className=\"list-item__subtitle\">\r\n        {moment(createdAt).format(\"MMMM Do, YYYY\")}\r\n      </span>\r\n    </div>\r\n    <div>\r\n      <h3 className=\"list-item__data\">\r\n        {numeral(amount / 100).format(\"$0,0.00\")}\r\n      </h3>\r\n    </div>\r\n  </Link>\r\n);\r\n\r\nexport default ExpenseListItem;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport getVisibleExpenses from \"../../Redux/expenses-selectors.js\";\r\nimport ExpenseListItem from \"../ExpensesListItem/expenses-list-item.component\";\r\nimport \"./expense-list.styles.scss\";\r\n\r\nexport const ExpenseList = (props) => (\r\n  <div className=\"content-container\">\r\n    <div className=\"list-header\">\r\n      <div className=\"show-for-mobile\">Expenses</div>\r\n      <div className=\"show-for-desktop\">Expense</div>\r\n      <div className=\"show-for-desktop\">Amount</div>\r\n    </div>\r\n    {props.expenses.length === 0 ? (\r\n      <div className=\"list-message\">\r\n        <span>No expenses</span>\r\n      </div>\r\n    ) : (\r\n      props.expenses.map((expense) => {\r\n        return <ExpenseListItem key={expense.id} {...expense} />;\r\n      })\r\n    )}\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    expenses: getVisibleExpenses(state.expenses, state.filters),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(ExpenseList);\r\n","import React from \"react\";\r\n\r\nimport ExpensesSummary from \"../ExpensesSummary/expenses-summary.component\";\r\nimport ExpenseListFilters from \"../ExpenseListFilters/expense-list-filters.component\";\r\nimport ExpenseList from \"../ExpenseList/expense-list.component\";\r\n\r\nconst ExpenseDashboard = () => (\r\n  <div>\r\n    <ExpensesSummary />\r\n    <ExpenseListFilters />\r\n    <ExpenseList />\r\n  </div>\r\n);\r\n\r\nexport default ExpenseDashboard;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDvppfmHfOUQqOYae6XL7iZmpPp15YwAVc\",\r\n  authDomain: \"expensify-app-7bc3b.firebaseapp.com\",\r\n  databaseURL: \"https://expensify-app-7bc3b.firebaseio.com\",\r\n  projectId: \"expensify-app-7bc3b\",\r\n  storageBucket: \"expensify-app-7bc3b.appspot.com\",\r\n  messagingSenderId: \"933026124546\",\r\n  appId: \"1:933026124546:web:997db739bb4365c627e81b\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\nconst googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { firebase, googleAuthProvider, database as default };\r\n\r\n// database.ref(\"notes/-MBhbi5JzgkQwt8QL6g2\").update({\r\n//   time: \"tomorrow\",\r\n// });\r\n\r\n// database\r\n//   .ref(\"Expenses\")\r\n//   .once(\"value\")\r\n//   .then((snapshot) => {\r\n//     const expenses = [];\r\n//     snapshot.forEach((childSnapshot) => {\r\n//       expenses.push({\r\n//         id: childSnapshot.key,\r\n//         ...childSnapshot.val(),\r\n//       });\r\n//     });\r\n//     console.log(expenses);\r\n//   });\r\n\r\n// database.ref(\"Expenses\").on(\"value\", (snapshot) => {\r\n//   const expenses = [];\r\n//   snapshot.forEach((childSnapshot) => {\r\n//     expenses.push({\r\n//       id: childSnapshot.key,\r\n//       ...childSnapshot.val(),\r\n//     });\r\n//   });\r\n//   console.log(expenses);\r\n// });\r\n\r\n// database.ref(\"Expenses\").on(\"child_added\", (snapshot) => {\r\n//   console.log(snapshot.key, snapshot.val());\r\n// });\r\n\r\n// database.ref(\"Expenses\").push({\r\n//   descriptions: \"rent\",\r\n//   amount: 450000,\r\n//   note: \"\",\r\n// });\r\n// database.ref(\"Expenses\").push({\r\n//   descriptions: \"Birthday\",\r\n//   amount: 100000,\r\n//   note: \"\",\r\n// });\r\n\r\n// database.ref(\"notes\").push({\r\n//   note: \"new course\",\r\n//   time: \"today\",\r\n// });\r\n\r\n// const firebasenotes = {\r\n//   note1: {\r\n//     id: 12,\r\n//     title: \"first note\",\r\n//     body: \"this is my note\",\r\n//   },\r\n//   note2: {\r\n//     id: 13,\r\n//     title: \"second note\",\r\n//     body: \"this is my note 2\",\r\n//   },\r\n// };\r\n\r\n// const notes = [];\r\n// database.ref(\"notes\").set(firebasenotes);\r\n\r\n// database\r\n//   .ref()\r\n//   .once(\"value\")\r\n//   .then((snapshot) => {\r\n//     const data = snapshot.val();\r\n//     console.log(data);\r\n//   })\r\n//   .catch((err) => {\r\n//     console.log(\"error\", err);\r\n//   });\r\n\r\n// database\r\n//   .ref()\r\n//   .set({\r\n//     name: \"tejas\",\r\n//     location: {\r\n//       city: \"satara\",\r\n//       state: \"maharashtra\",\r\n//     },\r\n//   })\r\n//   .then(() => {\r\n//     console.log(\"success\");\r\n//   })\r\n//   .catch((err) => {\r\n//     console.log(\"This failed\", err);\r\n//   });\r\n\r\n// database\r\n//   .ref(\"location/city\")\r\n//   .remove()\r\n//   .then(() => {\r\n//     console.log(\"data removed\");\r\n//   })\r\n//   .catch((err) => {\r\n//     console.log(\"Error removing data\", err);\r\n//   });\r\n\r\n// database.ref().update({\r\n//   name: \"tejas sohoni\",\r\n//   \"location/city\": \"mumbai\",\r\n// })\r\n","import database from \"../Firebase/firebase\";\r\n\r\nexport const addExpense = (expense) => ({\r\n  type: \"ADD_EXPENSE\",\r\n  expense,\r\n});\r\n\r\nexport const startAddExpense = (expenseData = {}) => {\r\n  return (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    const {\r\n      description = \"\",\r\n      note = \"\",\r\n      amount = 0,\r\n      createdAt = 0,\r\n    } = expenseData;\r\n    const expense = { description, note, amount, createdAt };\r\n    return database\r\n      .ref(`users/${uid}/expenses`)\r\n      .push(expense)\r\n      .then((ref) => {\r\n        dispatch(\r\n          addExpense({\r\n            id: ref.key,\r\n            ...expense,\r\n          })\r\n        );\r\n      });\r\n  };\r\n};\r\n\r\nexport const removeExpense = ({ id } = {}) => ({\r\n  type: \"REMOVE_EXPENSE\",\r\n  id,\r\n});\r\n\r\nexport const startRemoveExpenses = ({ id } = {}) => {\r\n  return (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    return database\r\n      .ref(`users/${uid}/expenses/${id}`)\r\n      .remove()\r\n      .then(() => {\r\n        dispatch(removeExpense({ id }));\r\n      });\r\n  };\r\n};\r\n\r\nexport const editExpense = (id, updates) => ({\r\n  type: \"EDIT_EXPENSE\",\r\n  id,\r\n  updates,\r\n});\r\n\r\nexport const startEditExpenses = (id, updates) => {\r\n  return (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    return database\r\n      .ref(`users/${uid}/expenses/${id}`)\r\n      .update(updates)\r\n      .then(() => {\r\n        dispatch(editExpense(id, updates));\r\n      });\r\n  };\r\n};\r\n\r\nexport const setExpenses = (expenses) => ({\r\n  type: \"SET_EXPENSES\",\r\n  expenses,\r\n});\r\n\r\nexport const startSetExpenses = () => {\r\n  return (dispatch, getState) => {\r\n    const uid = getState().auth.uid;\r\n    return database\r\n      .ref(`users/${uid}/expenses`)\r\n      .once(\"value\")\r\n      .then((snapshot) => {\r\n        const expenses = [];\r\n\r\n        snapshot.forEach((childSnapshot) => {\r\n          expenses.push({\r\n            id: childSnapshot.key,\r\n            ...childSnapshot.val(),\r\n          });\r\n        });\r\n\r\n        dispatch(setExpenses(expenses));\r\n      });\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./expense-form.styles.scss\";\r\n\r\nconst date = moment();\r\nconsole.log(date.format(\"Do/MMM/YYYY\"));\r\n\r\nclass ExpenseForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      description: props.expense ? props.expense.description : \"\",\r\n      note: props.expense ? props.expense.note : \"\",\r\n      amount: props.expense ? (props.expense.amount / 100).toString() : \"\",\r\n      createdAt: props.expense ? moment(props.expense.createdAt) : moment(),\r\n      calendarFocused: false,\r\n      error: \"\",\r\n    };\r\n  }\r\n\r\n  onDescriptionChange = (e) => {\r\n    const description = e.target.value;\r\n    this.setState(() => ({ description }));\r\n  };\r\n  onNoteChange = (e) => {\r\n    const note = e.target.value;\r\n    this.setState(() => ({ note }));\r\n  };\r\n\r\n  onAmountChange = (e) => {\r\n    const amount = e.target.value;\r\n    if (!amount || amount.match(/^\\d{1,}(\\.\\d{0,2})?$/)) {\r\n      this.setState(() => ({ amount }));\r\n    }\r\n  };\r\n\r\n  onDateChange = (createdAt) => {\r\n    if (createdAt) {\r\n      this.setState(() => ({ createdAt }));\r\n    }\r\n  };\r\n\r\n  onFocusChange = ({ focused }) => {\r\n    this.setState(() => ({ calendarFocused: focused }));\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.description || !this.state.amount) {\r\n      this.setState(() => ({ error: \"Please enter the necessary details\" }));\r\n    } else {\r\n      this.setState(() => ({ error: \"\" }));\r\n      this.props.onSubmit({\r\n        description: this.state.description,\r\n        amount: parseFloat(this.state.amount, 10) * 100,\r\n        createdAt: this.state.createdAt.valueOf(),\r\n        note: this.state.note,\r\n      });\r\n\r\n      this.setState(() => ({\r\n        description: \"\",\r\n        amount: \"\",\r\n        date: moment(),\r\n        note: \"\",\r\n      }));\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.onSubmit} className=\"form\">\r\n        {this.state.error && <p className=\"form-error\">{this.state.error}</p>}\r\n\r\n        <input\r\n          className=\"text-input\"\r\n          type=\"text\"\r\n          value={this.state.description}\r\n          placeholder=\"Description\"\r\n          autoFocus\r\n          onChange={this.onDescriptionChange}\r\n        />\r\n        <input\r\n          className=\"text-input\"\r\n          type=\"text\"\r\n          placeholder=\"Amount\"\r\n          value={this.state.amount}\r\n          onChange={this.onAmountChange}\r\n        />\r\n        <SingleDatePicker\r\n          className=\"datepicker\"\r\n          date={this.state.createdAt}\r\n          onDateChange={this.onDateChange}\r\n          focused={this.state.calendarFocused}\r\n          onFocusChange={this.onFocusChange}\r\n          numberOfMonths={1}\r\n          isOutsideRange={() => false}\r\n        />\r\n        <textarea\r\n          className=\"textarea\"\r\n          value={this.state.note}\r\n          onChange={this.onNoteChange}\r\n          placeholder=\"Add a note for your expense(optional)\"\r\n        ></textarea>\r\n        <div>\r\n          <button className=\"button\" onClick={this.onSubmit}>\r\n            Save Expense\r\n          </button>\r\n          <Link className=\"cancel-button\" to=\"/\">\r\n            Cancel\r\n          </Link>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startAddExpense } from \"../../Redux/expenses-actions\";\r\nimport ExpenseForm from \"../ExpenseForm/expense-form.component\";\r\n\r\nexport class AddExpense extends React.Component {\r\n  onSubmit = (expense) => {\r\n    this.props.startAddExpense(expense);\r\n    this.props.history.push(\"/dashboard\");\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"page-header \">\r\n          <div className=\"content-container\">\r\n            <h1 className=\"page-header__title\">Add Expense</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-container\">\r\n          <ExpenseForm onSubmit={this.onSubmit} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startAddExpense: (expense) => dispatch(startAddExpense(expense)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(AddExpense);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport \"react-dates/initialize\";\r\n\r\nimport {\r\n  startEditExpenses,\r\n  startRemoveExpenses,\r\n} from \"../../Redux/expenses-actions\";\r\nimport ExpenseForm from \"../ExpenseForm/expense-form.component\";\r\nimport \"./edit-expense.styles.scss\";\r\n\r\nexport class EditExpensePage extends React.Component {\r\n  onSubmit = (expense) => {\r\n    this.props.startEditExpenses(this.props.expense.id, expense);\r\n    this.props.history.push(\"/dashboard\");\r\n  };\r\n  onRemove = () => {\r\n    this.props.startRemoveExpenses({ id: this.props.expense.id });\r\n    this.props.history.push(\"/dashboard\");\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"page-header\">\r\n          <div className=\"content-container\">\r\n            <h1 className=\"page-header__title\">Edit Expense</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"content-container remove\">\r\n          <ExpenseForm expense={this.props.expense} onSubmit={this.onSubmit} />\r\n          <button onClick={this.onRemove} className=\"button remove-button\">\r\n            Remove Expense\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  expense: state.expenses.find(\r\n    (expense) => expense.id === props.match.params.id\r\n  ),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, props) => ({\r\n  startEditExpenses: (id, expense) => dispatch(startEditExpenses(id, expense)),\r\n  startRemoveExpenses: (data) => dispatch(startRemoveExpenses(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditExpensePage);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NotFoundError = () => (\r\n  <div>\r\n    404 Not Found - <NavLink to=\"/\">Go Home</NavLink>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundError;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { startLogin } from \"../../Redux/auth-actions.js\";\r\nimport \"./login.styles.scss\";\r\n\r\nexport const LoginPage = ({ startLogin }) => (\r\n  <div className=\"box-layout\">\r\n    <div className=\"box-layout__box\">\r\n      <h1 className=\"box-layout__title\">Expensify</h1>\r\n      <p>A Better Way To Handle Your Expenses.</p>\r\n      <button className=\"button\" onClick={startLogin}>\r\n        Login With Google\r\n      </button>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startLogin: () => dispatch(startLogin()),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(LoginPage);\r\n","import { firebase, googleAuthProvider } from \"../Firebase/firebase\";\r\n\r\nexport const login = (uid) => ({\r\n  type: \"LOGIN\",\r\n  uid: uid,\r\n});\r\n\r\nexport const logout = () => ({\r\n  type: \"LOGOUT\",\r\n});\r\n\r\nexport const startLogin = () => {\r\n  return () => {\r\n    return firebase.auth().signInWithPopup(googleAuthProvider);\r\n  };\r\n};\r\n\r\nexport const startLogout = () => {\r\n  return () => {\r\n    return firebase.auth().signOut();\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { startLogout } from \"../../Redux/auth-actions.js\";\r\nimport \"./header.styles.scss\";\r\n\r\nexport const Header = ({ startLogout }) => (\r\n  <header className=\"header\">\r\n    <div className=\"content-container\">\r\n      <div className=\"header__content\">\r\n        <Link className=\"header__title\" to=\"/dashboard\">\r\n          <h1>Expensify</h1>\r\n        </Link>\r\n        <button className=\"header__button\" onClick={startLogout}>\r\n          Logout\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </header>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  startLogout: () => dispatch(startLogout()),\r\n});\r\n\r\nexport default connect(undefined, mapDispatchToProps)(Header);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../Header/header.component\";\r\n\r\nexport const PrivateRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    component={(props) =>\r\n      isAuthenticated ? (\r\n        <div>\r\n          <Header />\r\n          <Component {...props} />\r\n        </div>\r\n      ) : (\r\n        <Redirect to=\"/\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: !!state.auth.uid,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nexport const PublicRoute = ({\r\n  isAuthenticated,\r\n  component: Component,\r\n  ...rest\r\n}) => (\r\n  <Route\r\n    {...rest}\r\n    component={(props) =>\r\n      isAuthenticated ? <Redirect to=\"/dashboard\" /> : <Component {...props} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: !!state.auth.uid,\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport createHistory from \"history/createBrowserHistory\";\r\n\r\nimport ExpenseDashboard from \"../Components/ExpenseDashboard/expense-dashboard-page.component.jsx\";\r\nimport AddExpense from \"../Components/AddExpense/add-expense-component.jsx\";\r\nimport EditExpense from \"../Components/EditExpense/edit-expense.component.jsx\";\r\nimport NotFoundError from \"../Components/404Error/404-error.component.jsx\";\r\nimport LoginPage from \"../Components/Login/login-page.component\";\r\nimport PrivateRoute from \"../Components/PrivateRoute/private-route.component.jsx\";\r\nimport PublicRoute from \"../Components/PublicRoute/public-route.component\";\r\n\r\nexport const history = createHistory();\r\n\r\nconst AppRouter = () => (\r\n  <Router history={history}>\r\n    <div>\r\n      <Switch>\r\n        <PublicRoute exact path=\"/\" component={LoginPage} exact={true} />\r\n        <PrivateRoute path=\"/create\" component={AddExpense} />\r\n        <PrivateRoute path=\"/dashboard\" component={ExpenseDashboard} />\r\n        <PrivateRoute path=\"/edit/:id\" component={EditExpense} />\r\n        <Route component={NotFoundError} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default AppRouter;\r\n","import React from \"react\";\r\nimport AppRouter from \"./app-routers/app-routers.jsx\";\r\n\r\nimport \"./App.scss\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppRouter />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nimport \"./loading-screen.styles.scss\";\r\n\r\nexport default class LoadingScreen extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"loader\">\r\n        <img src={require(\"./loader.gif\")} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// Expenses Reducer\r\n\r\nconst expensesReducerDefaultState = [];\r\n\r\nexport default (state = expensesReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_EXPENSE\":\r\n      return [...state, action.expense];\r\n    case \"REMOVE_EXPENSE\":\r\n      return state.filter(({ id }) => id !== action.id);\r\n    case \"EDIT_EXPENSE\":\r\n      return state.map((expense) => {\r\n        if (expense.id === action.id) {\r\n          return {\r\n            ...expense,\r\n            ...action.updates,\r\n          };\r\n        } else {\r\n          return expense;\r\n        }\r\n      });\r\n    case \"SET_EXPENSES\":\r\n      return action.expenses;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import moment from \"moment\";\r\n\r\nconst filtersReducerDefaultState = {\r\n  text: \"\",\r\n  sortBy: \"date\",\r\n  startDate: moment().startOf(\"month\"),\r\n  endDate: moment().endOf(\"month\"),\r\n};\r\n\r\nconst filtersReducer = (state = filtersReducerDefaultState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_TEXT_FILTER\":\r\n      return {\r\n        ...state,\r\n        text: action.text,\r\n      };\r\n    case \"SORT_BY_AMOUNT\":\r\n      return {\r\n        ...state,\r\n        sortBy: \"amount\",\r\n      };\r\n    case \"SORT_BY_DATE\":\r\n      return {\r\n        ...state,\r\n        sortBy: \"date\",\r\n      };\r\n    case \"SET_START_DATE\":\r\n      return {\r\n        ...state,\r\n        startDate: action.startDate,\r\n      };\r\n    case \"SET_END_DATE\":\r\n      return {\r\n        ...state,\r\n        endDate: action.endDate,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filtersReducer;\r\n","export default (state = {}, action) => {\r\n  switch (action.type) {\r\n    case \"LOGIN\":\r\n      return {\r\n        uid: action.uid,\r\n      };\r\n    case \"LOGOUT\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport expensesReducer from \"./expenses-reducer\";\r\nimport filtersReducer from \"./filters-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst configStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      expenses: expensesReducer,\r\n      filters: filtersReducer,\r\n      auth: authReducer,\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  );\r\n\r\n  return store;\r\n};\r\n\r\nexport default configStore;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport LoadingScreen from \"./Components/LoadingScreen/loading-screen.component.jsx\";\r\nimport { startSetExpenses } from \"./Redux/expenses-actions.js\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport { history } from \"./app-routers/app-routers.jsx\";\r\nimport { login, logout } from \"./Redux/auth-actions\";\r\nimport { firebase } from \"./Firebase/firebase\";\r\nimport \"./index.css\";\r\nimport configStore from \"./Redux/store.js\";\r\n\r\nconst store = configStore();\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <LoadingScreen />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nlet hasRendered = false;\r\nconst renderApp = () => {\r\n  if (!hasRendered) {\r\n    ReactDOM.render(\r\n      <Provider store={store}>\r\n        <React.StrictMode>\r\n          <App />\r\n        </React.StrictMode>\r\n      </Provider>,\r\n      document.getElementById(\"root\")\r\n    );\r\n    hasRendered = true;\r\n  }\r\n};\r\n\r\nfirebase.auth().onAuthStateChanged((user) => {\r\n  if (user) {\r\n    store.dispatch(login(user.uid));\r\n    store.dispatch(startSetExpenses()).then(() => {\r\n      renderApp();\r\n      if (history.location.pathname === \"/\") {\r\n        history.push(\"/dashboard\");\r\n      }\r\n    });\r\n  } else {\r\n    store.dispatch(logout());\r\n    renderApp();\r\n    history.push(\"/\");\r\n  }\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}